/*
 * File: app/store/TrackpointsStore.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('UTalBus.store.TrackpointsStore', {
    extend: 'Ext.data.Store',

    requires: [
        'UTalBus.model.TrackpointsModel',
        'Ext.data.proxy.JsonP',
        'Ext.data.reader.Json'
    ],

    config: {
        model: 'UTalBus.model.TrackpointsModel',
        storeId: 'TrackpointsStore',
        proxy: {
            type: 'jsonp',
            enablePagingParams: false,
            extraParams: {
                limit: 1
            },
            reader: {
                type: 'json'
            }
        },
        listeners: [
            {
                fn: 'onJsonpstoreLoad',
                event: 'load'
            }
        ]
    },

    onJsonpstoreLoad: function(store, records, successful, operation, eOpts) {
        if(successful) {
            record = store.getAt(0);
            tracking_extmap.setMapCenter({latitude: record.get('latitude'), longitude: record.get('longitude')});
            var latlng = new google.maps.LatLng(record.get('latitude'), record.get('longitude'));
            tracking_marker.setPosition(latlng);
            velocity_field.setValue(Math.floor(record.get('velocity')) + " km/h");
            var cur_latlng = new google.maps.LatLng(record.get('latitude'), record.get('longitude'));
            geocoder.geocode({'latLng': cur_latlng}, function(results, status) {
                if (status == google.maps.GeocoderStatus.OK && results[0])
        		devicedetails.setLocation("<font size=\"2\">La dirección mas cerca es: " + results[0].formatted_address.split(",", 1) + "</font>");
            });
            var elapsed_seconds = (Date.now() - Date.parse(record.get('time')))/1000;
            var time_unit;
            var time_amount;
            if(elapsed_seconds < 60) {
                time_unit = "segundos";
                time_amount = elapsed_seconds;
            } else if(elapsed_seconds < 3600) {
                time_unit = "minutos";
                time_amount = elapsed_seconds/60;
            } else if(elapsed_seconds < 86400) {
                time_unit = "horas";
                time_amount = elapsed_seconds/3600;
            } else {
                time_unit = "dias";
                time_amount = elapsed_seconds/86400;
            }
            time_amount = Math.floor(time_amount);
            time_string = new Date(Date.parse(record.get('time')));
            var state = "<font size=\"2\">";
            if(time_amount == 1) {
                state += "Ha pasado ";
                time_unit = time_unit.substring(0, time_unit.length-1);
            } else
                state += "Han pasado ";

            state += time_amount + " " + time_unit + " desde el último reporte recibido</br></br>Ultimo reporte: " + time_string;
            state += "</font>";
            devicedetails.setState(state);
            var jsonpstore = this;
            if(track_device) {
                if(window.update_timer !== undefined)
                    clearTimeout(update_timer);

                update_timer = setTimeout(function() {
                    jsonpstore.load();
                }, 3000);
            }
        }
    }

});